CREATE TABLE USERS (
    ID INTEGER not null primary key,
    COOKIE VARCHAR(30),
    USERNAME VARCHAR(30) not null unique, 
    NAME VARCHAR(30) not null ,
    LASTNAME VARCHAR(30) ,
    EMAIL VARCHAR(30) not null unique, 
    IMAGE VARCHAR(20),
    PASSWORD VARCHAR(60) not null,
    "ADMIN" BOOLEAN
  );

CREATE TABLE EMAIL(
    IDMAIL INTEGER not null primary key,
    INFO INTEGER, 
    TEXT  VARCHAR(400),
    SENDER INTEGER not null,
    RECEIVER INTEGER not null,
    FOREIGN KEY (SENDER) REFERENCES USERS(ID),
    FOREIGN KEY (RECEIVER) REFERENCES USERS(ID),
    FOREIGN KEY (IDMAIL) REFERENCES USERS(ID)
);

CREATE TABLE USERSANONIMOUS (
    COOKIE varchar(30),
    PRIMARY KEY (COOKIE)

);

CREATE TABLE CLIST (
    IDCATEGORY INTEGER not null primary key,
    "NAME" VARCHAR(30),
    DESCRIPTION VARCHAR(30),
    IMAGE VARCHAR(10)

);


CREATE TABLE LIST (
    IDLIST INTEGER not null primary key,
    USERCREATOR INTEGER,  
    IDCAT INTEGER,
    "NAME" VARCHAR(30),
    DESCRIPTION VARCHAR(30),
    IMAGE VARCHAR(50),
    FOREIGN KEY (USERCREATOR) REFERENCES USERS(ID),
    FOREIGN KEY (IDCAT) REFERENCES CLIST(IDCATEGORY)
);

CREATE TABLE CITEM (
    IDCATEGORY INTEGER not null primary key,
    "NAME" VARCHAR(30),
    DESCRIPTION VARCHAR(30),
    IMAGE VARCHAR(10)
);


CREATE TABLE ITEM (
    IDDCAT INTEGER not null,
    IDITEM INTEGER not null primary key,
    FOREIGN KEY (IDDCAT) REFERENCES CITEM(IDCATEGORY),
    CALORIE INTEGER,
    "NAME" VARCHAR(30),
    LOGO VARCHAR(50),
    NOTE VARCHAR(10)
);


CREATE TABLE COMPOSE(
    CCLIST INTEGER,
    CCITEM INTEGER ,
    FOREIGN KEY (CCITEM) REFERENCES ITEM(IDITEM),
    FOREIGN KEY (CCLIST) REFERENCES LIST(IDLIST),
    primary key (CCITEM, CCLIST)  
);

CREATE TABLE ISFRIEND(
    CC1 INTEGER ,
    CC2 INTEGER ,
    FOREIGN KEY (CC1) REFERENCES USERS(ID),
    FOREIGN KEY (CC2) REFERENCES USERS(ID),
    primary key (CC1, CC2)  
);

CREATE TABLE ACCESS(
    AAUSER INTEGER,
    AALIST INTEGER,
    FOREIGN KEY (AAUSER) REFERENCES USERS(ID),
    FOREIGN KEY (AALIST) REFERENCES LIST(IDLIST),
    primary key (AAUSER, AALIST)    
);


