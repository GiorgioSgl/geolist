CREATE TABLE USERS (
    USERNAME VARCHAR(30) not null primary key, 
    NAME VARCHAR(30) not null ,
    LASTNAME VARCHAR(30) ,
    EMAIL VARCHAR(30) not null unique, 
    IMAGE VARCHAR(20),
    PASSWORD VARCHAR(60) not null,
    "ADMIN" BOOLEAN
  );

CREATE TABLE EMAIL(
    IDMAIL VARCHAR(30) not null primary key,
    INFO INTEGER, 
    TEXT  VARCHAR(400),
    SENDER VARCHAR(30) not null,
    RECEIVER VARCHAR(30) not null,
    FOREIGN KEY (SENDER) REFERENCES USERS(USERNAME),
    FOREIGN KEY (RECEIVER) REFERENCES USERS(USERNAME),
    FOREIGN KEY (IDMAIL) REFERENCES USERS(USERNAME)
);

CREATE TABLE USERSANONIMOUS (
    COOKIE varchar(30),
    PRIMARY KEY (COOKIE)

);

CREATE TABLE CLIST (
    IDCATEGORY INTEGER not null primary key,
    "NAME" VARCHAR(30),
    DESCRIPTION VARCHAR(30),
    IMAGE VARCHAR(10)

);


CREATE TABLE LIST (
    IDLIST INTEGER not null primary key,
    USERCREATOR VARCHAR (30),  
    IDCAT INTEGER,
    "NAME" VARCHAR(30),
    DESCRIPTION VARCHAR(30),
    IMAGE VARCHAR(10),
    FOREIGN KEY (USERCREATOR) REFERENCES USERS(USERNAME),
    FOREIGN KEY (IDCAT) REFERENCES CLIST(IDCATEGORY)
);

CREATE TABLE CITEM (
    IDCATEGORY INTEGER not null primary key,
    "NAME" VARCHAR(30),
    DESCRIPTION VARCHAR(30),
    IMAGE VARCHAR(10)
);


CREATE TABLE ITEM (
    IDDCAT INTEGER not null,
    IDITEM INTEGER not null primary key,
    FOREIGN KEY (IDDCAT) REFERENCES CITEM(IDCATEGORY),
    CALORIE INTEGER,
    "NAME" VARCHAR(30),
    LOGO VARCHAR(30),
    NOTE VARCHAR(10)
);


CREATE TABLE COMPOSE(
    CCLIST INTEGER,
    CCITEM INTEGER ,
    FOREIGN KEY (CCITEM) REFERENCES ITEM(IDITEM),
    FOREIGN KEY (CCLIST) REFERENCES LIST(IDLIST),
    primary key (CCITEM, CCLIST)  
);

CREATE TABLE ISFRIEND(
    CC1 VARCHAR(30) ,
    CC2 VARCHAR(30) ,
    FOREIGN KEY (CC1) REFERENCES USERS(USERNAME),
    FOREIGN KEY (CC2) REFERENCES USERS(USERNAME),
    primary key (CC1, CC2)  
);

CREATE TABLE ACCESS(
    AAUSER VARCHAR (30),
    AALIST INTEGER,
    FOREIGN KEY (AAUSER) REFERENCES USERS(USERNAME),
    FOREIGN KEY (AALIST) REFERENCES LIST(IDLIST),
    primary key (AAUSER, AALIST)    
);


